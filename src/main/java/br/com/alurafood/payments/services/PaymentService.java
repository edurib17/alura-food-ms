package br.com.alurafood.payments.services;import br.com.alurafood.payments.dto.PaymentDTO;import br.com.alurafood.payments.enumeration.PaymentStatus;import br.com.alurafood.payments.model.Payment;import br.com.alurafood.payments.repository.PaymentRepository;import jakarta.persistence.EntityNotFoundException;import org.modelmapper.ModelMapper;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;@Servicepublic class PaymentService {    @Autowired    private PaymentRepository repository;    @Autowired    private ModelMapper modelMapper;    public Page<PaymentDTO> getAllPayments(Pageable pagination) {        return repository.findAll(pagination).map(p -> modelMapper.map(p, PaymentDTO.class));    }    public PaymentDTO getPaymentById(Long id) {        Payment payment = repository.findById(id)                .orElseThrow(() -> new EntityNotFoundException());        return modelMapper.map(payment, PaymentDTO.class);    }    public PaymentDTO createPayment(PaymentDTO paymentDTO) {        Payment payment = modelMapper.map(paymentDTO, Payment.class);        payment.setStatus(PaymentStatus.CREATED);        repository.save(payment);        return modelMapper.map(payment, PaymentDTO.class);    }    public PaymentDTO updatePayment(Long id, PaymentDTO paymentDTO) {        Payment payment = modelMapper.map(paymentDTO, Payment.class);        payment.setId(id);        payment = repository.save(payment);        return modelMapper.map(payment, PaymentDTO.class);    }    public void deletePayment(Long id) {        repository.deleteById(id);    }}